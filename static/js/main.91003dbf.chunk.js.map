{"version":3,"sources":["reducer/store.js","firebase/config.js","firebase/connector.js","firebase/auth.js","session/withAuthentication.js","settings.js","session/withAuthorization.js","layout/head.js","layout/base.js","layout/footer.js","layout/menu.js","layout/paginate.js","layout/utils.js","ui/content/home.js","ui/content/blog/article-detail.js","ui/admin/articles.js","ui/admin/categories.js","ui/admin/dashboard.js","ui/auth/login.js","App.js","serviceWorker.js","index.js"],"names":["applySetAuthUser","state","action","authUser","applySetUsers","users","rootReducer","combineReducers","sessionState","type","userState","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","initializeApp","db","database","fs","firestore","auth","doCreateUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","withAuthentication","Component","WithAuthentication","render","props","onSetAuthUser","this","onAuthStateChanged","React","withRouter","connect","dispatch","HOME_ROUTE","withAuthorization","needsAuthorization","WithAuthorization","history","push","Head","title","charSet","Layout","Container","children","LayoutGuest","compose","LayoutUser","MainMenu","handleItemClick","e","name","path","setState","activeItem","Menu","style","marginTop","pointing","secondary","Item","header","onClick","active","position","PublicMenu","SimplePaginate","totalPages","page","handlePageClick","className","Button","size","disabled","margin","fromObjectToList","object","Object","keys","map","key","index","truncate","text","limit","substring","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","randomString","len","i","randomPoz","Math","floor","random","DisplayTimeAgo","isTimeAgo","date","time","formatter","buildFormatter","englishStrings","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","currentLang","treeName","md","Remarkable","html","typographer","ArticleWidget","slug","author","desc","Card","fluid","Content","Header","Meta","Description","textOverflow","overflow","height","dangerouslySetInnerHTML","__html","ArticleWidgetEmpty","padding","textAlign","fontSize","Icon","paddingTop","Home","getDatalistCount","ref","once","snapshot","totalItemCount","numChildren","getDatalist","queryDict","currentPage","perPage","datalistStack","startAt","direction","hasOwnProperty","searchFilter","qref","lastObj","datalist","articleId","orderByKey","limitToFirst","val","getDatalistRefresh","_isMounted","nextPage","Group","ceil","slice","langPrefix","highlight","str","lang","hljs","getLanguage","value","err","highlightAuto","renderer","rules","table_open","ArticleDetail","getData","orderByChild","equalTo","match","params","data","treeName2","INITIAL_STATE","error","success","loading","AddDataModal","open","categories","categoryId","closeConfigShow","closeOnEscape","close","handleSubmit","preventDefault","child","set","displayName","uid","Date","now","handleInput","search","target","endAt","options","isValid","Fragment","floated","color","Modal","onClose","Form","onSubmit","Message","visible","content","Field","onChange","placeholder","Dropdown","selection","onInput","id","label","autofocus","spellChecker","primary","EditDataModal","update","cursor","dataRow","DataRow","handleDelete","remove","deleteModal","basic","icon","Actions","inverted","Row","Table","Cell","Articles","HeaderCell","Body","getDatalistPartial","Label","Divider","isAuthenticated","token","emailVerified","Categories","Dashboard","Login","abortController","AbortController","then","user","collection","doc","get","admin","catch","message","isInvalid","Grid","verticalAlign","Column","maxWidth","Segment","piled","float","Input","iconPosition","abort","createBrowserHistory","App","store","createStore","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91003dbf.chunk.js","sourcesContent":["import { createStore, combineReducers } from 'redux';\n\n/* SESSION */\n\nconst applySetAuthUser = (state, action) => ({\n    ...state,\n    authUser: action.authUser,\n});\n\nconst sessionReducer = (state={authUser: null}, action) => {\n    switch(action.type) {\n        case 'AUTH_USER_SET': {\n            return applySetAuthUser(state, action);\n        }\n        default: return state;\n    }\n}\n\n/* USER */\n\nconst applySetUsers = (state, action) => ({\n    ...state,\n    users: action.users,\n});\n\nconst userReducer = (state={users: []}, action) => {\n    switch(action.type) {\n        case 'USERS_SET': {\n            return applySetUsers(state, action);\n        }\n        default: return state;\n    }\n}\n\n/* ROOT REDUCER */\n\nconst rootReducer = combineReducers({\n    sessionState: sessionReducer,\n    userState: userReducer\n});\n\n/* initStore */\nexport const initStore = () => createStore(rootReducer);","const firebaseConfig = {\n    apiKey: \"AIzaSyCIn_VA0zZjEnhuRySueXUimHUeBQpm7Bo\",\n    authDomain: \"nova-blog-3d833.firebaseapp.com\",\n    databaseURL: \"https://nova-blog-3d833.firebaseio.com\",\n    projectId: \"nova-blog-3d833\",\n    storageBucket: \"\",\n    messagingSenderId: \"901047629781\",\n    appId: \"1:901047629781:web:1fdfee40a824597873af5c\"\n};\n\nexport default firebaseConfig;","import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n//import * as firebase from 'firebase';\nimport firebaseConfig from './config';\n\nif(!firebase.apps.length){\n    firebase.initializeApp(firebaseConfig);\n}\n\nconst db = firebase.database();\nconst fs = firebase.firestore();\nconst auth = firebase.auth();\n\n//fs.settings({timestampsInSnapshots: true,});\n\nexport { db, auth, fs };","import { auth } from './connector';\n\n// Sign Up\nexport const doCreateUserWithEmailAndPassword = (email, password) =>\n  auth.createUserWithEmailAndPassword(email, password);\n\n// Sign In\nexport const doSignInWithEmailAndPassword = (email, password) =>\n  auth.signInWithEmailAndPassword(email, password);\n\n// Sign out\nexport const doSignOut = () =>\n  auth.signOut();\n\n// Password Reset\nexport const doPasswordReset = (email) =>\n  auth.sendPasswordResetEmail(email);\n\n// Password Change\nexport const doPasswordUpdate = (password) =>\n  auth.currentUser.updatePassword(password);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n//import { HOME_ROUTE } from '../settings';\nimport { firebase } from '../firebase';\n\nconst withAuthentication = (Component) => {\n    class WithAuthentication extends React.Component {\n        componentDidMount() {\n            //const { onSetAuthUser, history } = this.props;\n            const { onSetAuthUser } = this.props;\n            firebase.auth.onAuthStateChanged(authUser => {\n                if(authUser){\n                    onSetAuthUser(authUser);\n                    //history.push(HOME_ROUTE);\n                    //console.log(history)\n                    //window.location.reload();\n                } else {\n                    onSetAuthUser(null);\n                }\n            });\n        }\n        render = () => (\n            <Component { ...this.props } />\n        )\n    }\n\n    const mapDispatchToProps = ( dispatch) => ({\n        onSetAuthUser: authUser => dispatch({type: 'AUTH_USER_SET', authUser}),\n    });\n    return withRouter(connect(null, mapDispatchToProps)(WithAuthentication));\n}\n\nexport default withAuthentication;","export const LOGIN_ROUTE = '/auth/login';\nexport const HOME_ROUTE = '/admin';\nexport const INDEX_ROUTE = '/';","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { firebase } from '../firebase';\nimport { LOGIN_ROUTE } from '../settings';\n\nconst withAuthorization = (needsAuthorization) => (Component) => {\n    class WithAuthorization extends React.Component {\n        // constructor(props){\n        //     super(props);\n        // }\n        componentDidMount() {\n            const { history } = this.props;\n            firebase.auth.onAuthStateChanged(authUser => {\n                if(!authUser && needsAuthorization) {\n                    history.push(LOGIN_ROUTE);\n                }\n            });\n        }\n        render = () => (\n            <Component {...this.props} />\n        )\n    }\n    return withRouter(WithAuthorization);\n}\n\nexport default withAuthorization;","import React from 'react';\nimport { HeadProvider, Title } from 'react-head'; // , Link, Meta\nimport PropTypes from 'prop-types';\n\nclass Head extends React.Component {\n    render() {\n        const { title } = this.props;\n        return (\n            <HeadProvider>\n                <meta charSet=\"UTF-8\" />\n                <Title>{!!title && title}</Title>\n            </HeadProvider>\n        )\n    }\n}\n\nHead.propTypes = {\n    title: PropTypes.string,\n}\n\nexport default Head;","import React, { Fragment } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { compose } from 'recompose';\n\nimport { withAuthentication, withAuthorization } from '../session';\nimport Head from './head';\n\n//const mapStateToProps = state => ({authUser: state.sessionState.authUser});\n\nconst Layout = props => (\n    <Fragment>\n        {!!props.title && <Head title={props.title} />}\n        <Container>\n            {props.children}\n        </Container>\n    </Fragment>\n)\n\nexport const LayoutGuest = compose(\n    withAuthentication,\n    withAuthorization(false)\n)(Layout);\n\nexport const LayoutUser = compose(\n    withAuthentication,\n    withAuthorization(true)\n)(Layout);","import React from 'react';\n\nclass Footer extends React.Component {\n    render = () => {\n        return (\n            <footer style={{ height: '70px', textAlign: 'center', padding: '20px 0', margin: '20px 0 0', color: '#010e28' }}>\n                <p>&copy; {new Date().getFullYear()} Copyright Crypto Indicator Alerts</p>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nimport { auth } from '../firebase';\n\nclass MainMenu extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem || false,\n            path: '/',\n        }\n    }\n    handleItemClick = (e, {name, path}) => {\n        this.setState({activeItem: name});\n        this.props.history.push(`/admin${path}`);\n    }\n    render() {\n        const { activeItem } = this.state;\n        return (\n            <Menu style={{marginTop: '10px'}} pointing secondary>\n                <Menu.Item header name=\"home\" path=\"\" onClick={this.handleItemClick}>Blog Administration</Menu.Item>\n                <Menu.Item\n                    name=\"articles\"\n                    path=\"/articles\"\n                    active={activeItem === 'articles'}\n                    onClick={this.handleItemClick}\n                    >Articles</Menu.Item>\n                <Menu.Item\n                    name=\"categories\"\n                    path=\"/categories\"\n                    active={activeItem === 'categories'}\n                    onClick={this.handleItemClick}\n                    >Categories</Menu.Item>\n                <Menu.Menu position=\"right\">\n                    <Menu.Item\n                        name=\"logout\"\n                        active={activeItem === 'logout'}\n                        onClick={() => {auth.doSignOut()}}\n                        >Logout</Menu.Item>\n                </Menu.Menu>\n            </Menu>\n        )\n    }\n}\nexport default MainMenu;\n\nexport class PublicMenu extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem || false,\n            path: '/',\n        }\n    }\n    handleItemClick = (e, {name, path}) => {\n        this.setState({activeItem: name});\n        this.props.history.push(`${path}`);\n    }\n    render = () => {\n        return (\n            <Menu style={{ marginTop: '10px' }} pointing secondary>\n                <Menu.Item name=\"home\" path=\"/\" onClick={this.handleItemClick}><strong>Blog</strong>&nbsp;| Supernova Software</Menu.Item>\n            </Menu>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\n\nclass SimplePaginate extends Component {\n    render() {\n        const { totalPages, page, handlePageClick } = this.props;\n        return (\n            <div className=\"Pagination\">\n                <Button \n                    size=\"mini\"\n                    disabled={page <= 1}\n                    onClick={() => handlePageClick('prev')}\n                    >&larr;</Button>\n                <span style={{ margin: '10px' }}>\n                Page <b>{page}</b> - <b>{totalPages}</b>\n                </span>\n                <Button\n                    size=\"mini\"\n                    disabled={page === totalPages}\n                    onClick={() => handlePageClick('next')}\n                    >&rarr;</Button>\n            </div>\n        )\n    }\n}\nSimplePaginate.propTypes = {\n    totalPages: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    handlePageClick: PropTypes.func.isRequired,\n}\n\nexport default SimplePaginate;","import React from 'react';\nimport TimeAgo from 'react-timeago';\nimport englishStrings from 'react-timeago/lib/language-strings/en';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\n\nexport const fromObjectToList = object => object ? Object.keys(object).map(key => ({ ...object[key], index: key })) : [];\nexport const truncate = (text, limit=100) => !!text && text.length > limit ? `${text.substring(0, limit)} ...`: text;\nexport const slugify = (string) => {\n    const a = 'àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;'\n    const b = 'aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n  \n    return string.toString().toLowerCase()\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace(/&/g, '-and-') // Replace & with 'and'\n        .replace(/[^\\w-]+/g, '') // Remove all non-word characters\n        .replace(/--+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n  }\nexport const randomString = (len, charSet) => {\n    charSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let randomString = '';\n    for (let i = 0; i < len; i++){\n        const randomPoz = Math.floor(Math.random() * charSet.length);\n        randomString += charSet.substring(randomPoz, randomPoz+1);\n    }\n    return randomString;\n}\n\nexport class DisplayTimeAgo extends React.Component {\n    constructor(props){\n        super(props)\n        const time = !!this.props.time && new Intl.DateTimeFormat('en-US', \n                  {year: 'numeric', month: '2-digit',day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'}).format(this.props.time)\n        this.state = {\n            currentLang: 'en',\n            time: time,\n        }\n    }\n    \n    render = () => {\n        return (\n            (!!this.props.isTimeAgo) ?\n                <TimeAgo date={this.state.time} title={this.state.time} formatter={buildFormatter(englishStrings)} />\n            : this.state.time\n        )\n    }\n}","import React from 'react';\nimport { Icon, Card } from 'semantic-ui-react';\nimport { Remarkable } from 'remarkable';\n\nimport { db } from '../../firebase';\nimport { LayoutGuest, PublicMenu, truncate, fromObjectToList, SimplePaginate, DisplayTimeAgo } from '../../layout';\n\nconst treeName = \"articles\";\nlet md = new Remarkable('full', {\n    html: false,\n    typographer: true,\n});\n\nclass ArticleWidget extends React.Component {\n    render = () => {\n        const { title, slug, author, desc, date, history } = this.props;\n        return (\n            <Card fluid className=\"widget\">\n                <Card.Content>\n                    <Card.Header>{title}</Card.Header>\n                    <Card.Meta>{author} | <DisplayTimeAgo time={date} isTimeAgo={true} /></Card.Meta>\n                    <Card.Description style={{ textOverflow: 'ellipsis', overflow: 'hidden', height: '80px' }}>\n                        {!!desc &&\n                            <div dangerouslySetInnerHTML={{__html: md.render(truncate(desc, 500))}} />\n                        }\n                    </Card.Description>\n                </Card.Content>\n                <div className=\"caption\" onClick={() => history.push(`/article/${slug}`, {title})}></div>\n            </Card>\n        )\n    }\n}\n\nconst ArticleWidgetEmpty = () => \n    <Card fluid>\n        <Card.Header style={{ padding: '24px', textAlign: 'center', fontSize: '20px' }}>\n            <Icon name=\"write\" size='large' /><br />\n            <p style={{ paddingTop: '8px' }}>There is no article</p>\n        </Card.Header>\n    </Card>\n\nclass Home extends React.Component {\n    constructor(props){\n        super(props);\n        this._isMounted = false;\n        this.state = {\n            currentPage: 1,\n            perPage: 20,\n            totalItemCount: 1,\n            datalistStack:[],\n            datalist: [],\n            searchFilter: \"\",\n        }\n    }\n    getDatalistCount = async () => await db.ref(treeName).once(\"value\", snapshot => this.setState({totalItemCount: snapshot.numChildren()}))\n    getDatalist = async (queryDict={}) => {\n        const { currentPage, perPage, datalistStack } = this.state;\n        const startAt = currentPage * perPage - perPage;\n        const direction = queryDict.hasOwnProperty(\"direction\")?queryDict.direction: 'next';\n        const searchFilter = queryDict.hasOwnProperty(\"searchFilter\")?queryDict.searchFilter:'';\n        let qref = db.ref(treeName)\n        let datalist;\n        if (direction === 'next') {\n            if (startAt > 0) {\n                const lastObj = this.state.datalist[this.state.datalist.length - 1];\n                qref = qref.startAt(lastObj.articleId);\n            }\n            if (datalistStack.hasOwnProperty(this.currentPage)) {\n                datalist = datalistStack[currentPage - 1];\n            } else {\n                qref = qref.orderByKey().limitToFirst(perPage + 1);\n                const snapshot = await qref.once(\"value\")\n                datalist = fromObjectToList(snapshot.val())\n                datalistStack.push(datalist);\n            }\n        } else if (direction === 'prev') {\n            datalist = datalistStack[currentPage - 1]\n        }\n        if (datalist === null) {datalist = []}\n        this.setState({datalist, searchFilter});\n    }\n    getDatalistRefresh = () => {\n        this._isMounted && this.setState({datalistStack: []}, async () => {\n            await this.getDatalistCount();\n            await this.getDatalist();\n        })\n    }\n    getDatalistPartial(){\n        let { datalist, perPage } = this.state;\n        if (datalist.length === perPage + 1) {datalist = datalist.slice(0, -1)}\n        return datalist;\n    }\n    handlePageClick = direction => {\n        const nextPage = direction === 'next' ? this.state.currentPage + 1 : this.state.currentPage - 1;\n        this.setState({currentPage: nextPage}, async () => {\n            await this.getDatalist({direction});\n        });\n    }\n    componentWillUnmount(){this._isMounted = false;}\n    componentDidMount(){\n        this._isMounted = true; this.getDatalistRefresh();\n    }\n\n    render = () => {\n        const { datalist } = this.state;\n        return (\n            <LayoutGuest>\n                <PublicMenu history={this.props.history} />\n                <h3>Welcome Back!</h3>\n                <Card.Group>\n                    {datalist.length > 0 ? datalist.map((val, key) => \n                        <ArticleWidget \n                            key={key}\n                            // title={val.title}\n                            // slug={val.slug}\n                            // author={val.author}\n                            // desc={val.desc}\n                            // date={val.date}\n                            {...val}\n                            history={this.props.history}\n                        />\n                    ): <ArticleWidgetEmpty />}\n                </Card.Group>\n                <br />\n                <SimplePaginate \n                    page={this.state.currentPage}\n                    totalPages={Math.ceil(this.state.totalItemCount / this.state.perPage)}\n                    handlePageClick={this.handlePageClick}\n                />\n            </LayoutGuest>\n        )\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport { Remarkable } from 'remarkable';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github-gist.css';\n//import 'highlight.js/styles/github.css';\n\nimport { db } from '../../../firebase';\nimport { LayoutGuest, PublicMenu, fromObjectToList, DisplayTimeAgo } from '../../../layout';\n\nconst treeName = \"articles\";\n\nlet md = new Remarkable('full', {\n    html: true,\n    typographer: true,\n    langPrefix:   'language-',\n    highlight: function (str, lang) {\n        if (lang && hljs.getLanguage(lang)) {\n            try {\n                return hljs.highlight(lang, str).value;\n            } catch (err) {}\n        }\n        try {\n            return hljs.highlightAuto(str).value;\n        } catch (err) {}\n        return ''; // use external default escaping\n    }\n});\n\nmd.renderer.rules.table_open = () => {\n    return '<table class=\"ui table\">';\n};\n/* \nInject line numbers for sync scroll. Notes:\n - We track only headings and paragraphs on first level. That's enougth.\n - Footnotes content causes jumps. Level limit filter it automatically.\n*/\n// md.renderer.rules.paragraph_open = function (tokens, idx) {\n//     let line;\n//     if (tokens[idx].lines && tokens[idx].level === 0) {\n//         line = tokens[idx].lines[0];\n//         return '<p class=\"line\" data-line=\"' + line + '\">';\n//     }\n//     return '<p>';\n// };\n// md.renderer.rules.heading_open = function (tokens, idx) {\n//     let line;\n//     if (tokens[idx].lines && tokens[idx].level === 0) {\n//         line = tokens[idx].lines[0];\n//         return '<h' + tokens[idx].hLevel + ' class=\"line\" data-line=\"' + line + '\">';\n//     }\n//     return '<h' + tokens[idx].hLevel + '>';\n// };\n\nclass ArticleDetail extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            data: null\n        }\n    }\n    getData = async () => {\n        let qref = await db.ref(treeName).orderByChild('slug').equalTo(this.props.match.params.slug)\n        const snapshot = await qref.once('value');\n        this.setState({data: fromObjectToList(snapshot.val())[0]});\n    }\n    componentDidMount(){\n        this.getData();\n    }\n    render = () => {\n        const { data } = this.state\n        return (\n            <LayoutGuest>\n                <style>\n                    {`\n                    p > code {\n                        background-color:#f6f8fa;\n                    }\n                    pre {\n                        /*font-size: 85%;*/\n                        border-radius:0.3rem; \n                        background-color:#f6f8fa;\n                        padding: 4px;\n                        overflow: auto;\n                        line-height: 1.45;\n                    }`}\n                </style>\n                <PublicMenu history={this.props.history} />\n                <Card.Group>\n                    <Card fluid>\n                        <Card.Content>\n                            <Card.Header>{!!data && data.title}</Card.Header>\n                            <Card.Meta>{!!data && data.author} | {!!data && <DisplayTimeAgo time={data.date} isTimeAgo={true} />}</Card.Meta>\n                            <Card.Description>\n                                {!!data && <div dangerouslySetInnerHTML={{__html: md.render(data.desc)}} />}\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Card.Group>\n            </LayoutGuest>\n        )\n    }\n}\n\nexport default ArticleDetail;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Label, Divider, Modal, Icon, Header, Form, Message, Table, Dropdown } from 'semantic-ui-react';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\n//import _ from 'lodash';\n\nimport { LayoutUser, MainMenu, SimplePaginate, slugify, fromObjectToList, randomString, DisplayTimeAgo } from '../../layout';\nimport { db } from '../../firebase';\n\nconst treeName = \"articles\";\nconst treeName2 = \"categories\";\nconst INITIAL_STATE = {title: '', desc: '', error: '', success: '', loading: false}\n\nclass AddDataModal extends React.Component {\n    state = {open: false, ...INITIAL_STATE, categories: [], categoryId: null}\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        this.setState({loading: true, error: '', success: ''})\n        const articleId = randomString(28);\n        db.ref(treeName).child(articleId).set({\n            title: this.state.title,\n            slug: slugify(this.state.title),\n            author: this.props.displayName || 'Admin',\n            uid: this.props.uid || 'xxx',\n            articleId: articleId,\n            categoryId: this.state.categoryId,\n            desc: this.state.desc,\n            date: Math.floor(Date.now()),\n        })\n        this.setState({title: '', desc: '', loading: false, open: false});\n        this.props.getDatalistRefresh();\n    }\n    handleInput = async e => {\n        const search = e.target.value;\n        let categories = []\n        if (!!search && search.length > 1) {\n            let qref = db.ref(treeName2)\n            qref = qref.orderByChild(\"slug\").startAt(search).endAt(search+\"\\uf8ff\")\n            const snapshot = await qref.once('value');\n            const options = fromObjectToList(snapshot.val());\n            categories = options.map((val, key) => ({key, value: val.categoryId, text: val.name}))\n        }\n        this.setState({categories})\n    }\n    render = () => {\n        const { open, closeOnEscape, title, desc } = this.state;\n        const isValid = title !== '' && desc !== '';\n        return (\n            <React.Fragment>\n                <Button floated='right' size=\"mini\" color='orange' onClick={this.closeConfigShow(false, true)}><Icon name='plus' />New Article</Button>\n                <Modal closeOnEscape={closeOnEscape} onClose={this.close} open={open} size='large'>\n                    <Modal.Header>Add New Article</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Form onSubmit={this.handleSubmit} error={!!this.state.error}>\n                                {!!this.state.error && <Message error visible header=\"Error!\" content={this.state.error} />}\n                                {!!this.state.success && <Message error visible header=\"Success!\" content={this.state.success} />}\n                                <Form.Field>\n                                    <label>Title</label>\n                                    <input \n                                        type=\"text\"\n                                        value={title}\n                                        onChange={e => this.setState({title: e.target.value})}\n                                        placeholder=\"Title\"\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Category</label>\n                                    <Dropdown \n                                        placeholder=\"Select Category\"\n                                        fluid\n                                        search\n                                        selection\n                                        onInput={this.handleInput}\n                                        onChange={(e, { value }) => this.setState({ categoryId: value })}\n                                        options={this.state.categories}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <SimpleMDE\n                                        id=\"addnewarticledesc\"\n                                        label=\"Description\"\n                                        onChange={value => this.setState({desc: value})}\n                                        value={desc}\n                                        options={{\n                                            autofocus: false,\n                                            spellChecker: true,\n                                        }}\n                                    />\n                                </Form.Field>\n                                <Button loading={this.state.loading} disabled={!isValid} primary>Save</Button>\n                            </Form>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nclass EditDataModal extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {open: false, loading: false, error: '', success: '', ...props.dataRow}\n    }\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        this.setState({loading: true, error: '', success: ''})\n        const { articleId } = this.state;\n        db.ref(treeName).child(articleId).update({\n            title: this.state.title,\n            slug: slugify(this.state.title),\n            author: this.state.displayName || 'Admin',\n            uid: this.state.uid || 'xxx',\n            articleId: articleId,\n            desc: this.state.desc,\n            date: Math.floor(Date.now()),\n        })\n        this.setState({loading: false, open: false})\n        this.props.getDatalistRefresh();\n    }\n    handleInput = async e => {\n        const search = e.target.value;\n        let categories = []\n        if (!!search && search.length > 1) {\n            let qref = db.ref(treeName2)\n            qref = qref.orderByChild(\"slug\").startAt(search).endAt(search+\"\\uf8ff\")\n            const snapshot = await qref.once('value');\n            const options = fromObjectToList(snapshot.val());\n            categories = options.map((val, key) => ({key, value: val.categoryId, text: val.name}))\n        }\n        this.setState({categories})\n    }\n    componentDidMount(){\n        this.handleInput({target:{value: this.state.categoryId}})\n    }\n    render = () => {\n        const { title, desc} = this.state\n        const isValid = title !== '' && desc !== ''\n        return (\n            <React.Fragment>\n                <span onClick={this.closeConfigShow(false, true)} style={{ cursor: 'pointer' }}><Icon name=\"edit outline\" color=\"blue\" /></span>\n                <Modal closeOnEscape={this.state.closeOnEscape} onClose={this.close} open={this.state.open} size='large'>\n                    <Modal.Header>Edit Article</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Form onSubmit={this.handleSubmit} error={!!this.state.error}>\n                                {!!this.state.error && <Message error visible header=\"Error!\" content={this.state.error} />}\n                                {!!this.state.success && <Message error visible header=\"Success!\" content={this.state.success} />}\n                                <Form.Field>\n                                    <label>Title</label>\n                                    <input \n                                        type=\"text\"\n                                        value={title}\n                                        onChange={e => this.setState({title: e.target.value})}\n                                        placeholder=\"Title\"\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <label>Category</label>\n                                    <Dropdown \n                                        placeholder=\"Select Category\"\n                                        fluid\n                                        search\n                                        selection\n                                        onInput={this.handleInput}\n                                        onChange={(e, { value }) => this.setState({ categoryId: value })}\n                                        options={this.state.categories}\n                                        value={this.state.categoryId}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <SimpleMDE\n                                        id=\"editarticledesc\"\n                                        label=\"Description\"\n                                        onChange={value => this.setState({desc: value})}\n                                        value={desc}\n                                        options={{\n                                            autofocus: false,\n                                            spellChecker: true,\n                                        }}\n                                    />\n                                </Form.Field>\n                                <Button loading={this.state.loading} disabled={!isValid} primary>Save</Button>\n                            </Form>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nclass DataRow extends React.Component {\n    state = {open: false}\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleDelete = async articleId => {\n        await db.ref(treeName).child(articleId).remove();\n        this.props.getDatalistRefresh();\n    }\n    deleteModal = articleId => {\n        const { open, closeOnEscape } = this.state;\n        return (\n            <React.Fragment>\n                <span onClick={this.closeConfigShow(false, true)} style={{ cursor: 'pointer' }}><Icon name='trash alternate outline' color='red' /></span>\n                <Modal closeOnEscape={closeOnEscape} onClose={this.close} open={open} basic size='tiny'>\n\t\t\t\t\t<Header icon='trash alternate outline' content=\"Delete Article\" />\n\t\t\t\t\t<Modal.Content>\n\t\t\t\t\t\t<p>Are you sure to delete this article?</p>\n\t\t\t\t\t</Modal.Content>\n\t\t\t\t\t<Modal.Actions>\n\t\t\t\t\t\t<Button color='green' onClick={() => this.handleDelete(articleId)} inverted><Icon name='checkmark' /> Yes</Button>\n\t\t\t\t\t\t<Button basic color='red' onClick={this.close} inverted><Icon name='remove' /> No</Button>\n\t\t\t\t\t</Modal.Actions>\n\t\t\t\t</Modal>\n            </React.Fragment>\n        )\n    }\n    render = () => {\n        const { Row, Cell } = Table;\n        const { title, articleId, date } = this.props.dataRow;\n        return (\n            <Row>\n                <Cell>{title}</Cell>\n                <Cell>{articleId}</Cell>\n                <Cell><DisplayTimeAgo time={date} isTimeAgo={true} /></Cell>\n                <Cell>\n                    <EditDataModal {...this.props} />\n                    {this.deleteModal(articleId)}\n                </Cell>\n            </Row>\n        )\n    }\n}\n\nclass Articles extends React.Component {\n    constructor(props){\n        super(props);\n        this._isMounted = false;\n        this.state = {\n            currentPage: 1,\n            perPage: 20,\n            totalItemCount: 1,\n            datalistStack:[],\n            datalist: [],\n            searchFilter: \"\",\n        }\n    }\n    getDatalistCount = async () => await db.ref(treeName).once(\"value\", snapshot => this.setState({totalItemCount: snapshot.numChildren()}))\n    getDatalist = async (queryDict={}) => {\n        const { currentPage, perPage, datalistStack } = this.state;\n        const startAt = currentPage * perPage - perPage;\n        const direction = queryDict.hasOwnProperty(\"direction\")?queryDict.direction: 'next';\n        const searchFilter = queryDict.hasOwnProperty(\"searchFilter\")?queryDict.searchFilter:'';\n        let qref = db.ref(treeName)\n        let datalist;\n        if (direction === 'next') {\n            if (startAt > 0) {\n                const lastObj = this.state.datalist[this.state.datalist.length - 1];\n                qref = qref.startAt(lastObj.articleId);\n            }\n            if (datalistStack.hasOwnProperty(this.currentPage)) {\n                datalist = datalistStack[currentPage - 1];\n            } else {\n                qref = qref.orderByKey().limitToFirst(perPage + 1);\n                const snapshot = await qref.once(\"value\")\n                datalist = fromObjectToList(snapshot.val())\n                datalistStack.push(datalist);\n            }\n        } else if (direction === 'prev') {\n            datalist = datalistStack[currentPage - 1]\n        }\n        if (datalist === null) {datalist = []}\n        this.setState({datalist, searchFilter});\n    }\n    getDatalistRefresh = () => {\n        this._isMounted && this.setState({datalistStack: []}, async () => {\n            await this.getDatalistCount();\n            await this.getDatalist();\n        })\n    }\n    getDatalistPartial(){\n        let { datalist, perPage } = this.state;\n        if (datalist.length === perPage + 1) {datalist = datalist.slice(0, -1)}\n        return datalist;\n    }\n    handlePageClick = direction => {\n        const nextPage = direction === 'next' ? this.state.currentPage + 1 : this.state.currentPage - 1;\n        this.setState({currentPage: nextPage}, async () => {\n            await this.getDatalist({direction});\n        });\n    }\n    componentWillUnmount(){this._isMounted = false;}\n    componentDidMount(){\n        this._isMounted = true; this.getDatalistRefresh();\n    }\n    render = () => {\n        const { Header, Row, HeaderCell, Body } = Table;\n        const datalist = this.getDatalistPartial();\n        return (\n            <LayoutUser>\n                <MainMenu history={this.props.history} />\n                <h3>All Articles <Label floated=\"right\">Total {this.state.totalItemCount}</Label>\n                    <AddDataModal getDatalistRefresh={this.getDatalistRefresh} uid={this.props.uid} displayName={this.props.displayName} />\n                </h3>\n                <Divider />\n                <Table>\n                    <Header>\n                        <Row>\n                            <HeaderCell>Title</HeaderCell>\n                            <HeaderCell>ID</HeaderCell>\n                            <HeaderCell>Time</HeaderCell>\n                            <HeaderCell><Icon name='ellipsis horizontal' /></HeaderCell>\n                        </Row>\n                    </Header>\n                    <Body>\n                        {datalist.length > 0 && datalist.map((dataRow, key) => \n                            <DataRow key={key} getDatalistRefresh={this.getDatalistRefresh} dataRow={dataRow} />\n                        )}\n                    </Body>\n                </Table>\n                <SimplePaginate \n                    page={this.state.currentPage}\n                    totalPages={Math.ceil(this.state.totalItemCount / this.state.perPage)}\n                    handlePageClick={this.handlePageClick}\n                />\n            </LayoutUser>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    const { authUser } = state.sessionState\n    //console.log(authUser)\n    return {\n        isAuthenticated: !!authUser,\n        token: !!authUser && authUser.uid,\n        displayName: !!authUser && authUser.displayName,\n        email: !!authUser && authUser.email,\n        emailVerified: !!authUser && authUser.emailVerified,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Articles);","import React from 'react';\n\nimport { Button, Label, Divider, Modal, Icon, Header, Form, Message, Table } from 'semantic-ui-react';\n\nimport { LayoutUser, MainMenu, SimplePaginate, slugify, fromObjectToList, randomString, DisplayTimeAgo } from '../../layout';\nimport { db } from '../../firebase';\n\nconst treeName = \"categories\";\nconst INITIAL_STATE = {name: '', active: true, error: '', success: '', loading: false}\n\nclass AddDataModal extends React.Component {\n    state = {open: false, ...INITIAL_STATE}\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleSubmit = async e => {\n        e.preventDefault();\n        this.setState({loading: true, error: '', success: ''})\n        const categoryId = randomString(28);\n        db.ref(treeName).child(categoryId).set({\n            name: this.state.name,\n            slug: slugify(this.state.name),\n            active: true,\n            categoryId: categoryId,\n            date: Math.floor(Date.now()),\n        })\n        this.setState({name: '', loading: false, open: false})\n        this.props.getDatalistRefresh();\n    }\n    render = () => {\n        const { open, closeOnEscape, name } = this.state;\n        const isValid = name !== '';\n        return (\n            <React.Fragment>\n                <Button floated='right' size='mini' color='orange' onClick={this.closeConfigShow(false, true)}><Icon name='plus' />New Category</Button>\n                <Modal closeOnEscape={closeOnEscape} onClose={this.close} open={open} size='large'>\n                    <Modal.Header>Add New Category</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Form onSubmit={this.handleSubmit} error={!!this.state.error}>\n                                {!!this.state.error && <Message error visible header=\"Error!\" content={this.state.error} />}\n                                {!!this.state.success && <Message error visible header=\"Success!\" content={this.state.success} />}\n                                <Form.Field>\n                                    <label>Name</label>\n                                    <input \n                                        type=\"text\"\n                                        value={name}\n                                        onChange={e => this.setState({name: e.target.value})}\n                                        placeholder=\"Name\"\n                                    />\n                                </Form.Field>\n                                <Button loading={this.state.loading} disabled={!isValid} primary>Save</Button>\n                            </Form>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nclass EditDataModal extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {open: false, loading: false, error: '', success: '', ...props.dataRow}\n    }\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleSubmit = async (e) => {\n        e.preventDefault()\n        this.setState({loading: true, error: '', success: ''})\n        const { categoryId } = this.state;\n        db.ref(treeName).child(categoryId).update({\n            name: this.state.name,\n            slug: slugify(this.state.name),\n            categoryId: categoryId,\n            date: Math.floor(Date.now()),\n        })\n        this.setState({loading: false, open: false})\n        this.props.getDatalistRefresh();\n    }\n    render = () => {\n        const { name } = this.state; // open, closeOnEscape,\n        const isValid = name !== '';\n        return (\n            <React.Fragment>\n                <span onClick={this.closeConfigShow(false, true)} style={{ cursor: 'pointer' }}><Icon name=\"edit outline\" color=\"blue\" /></span>\n                <Modal closeOnEscape={this.state.closeOnEscape} onClose={this.close} open={this.state.open} size='large'>\n                    <Modal.Header>Edit Category</Modal.Header>\n                    <Modal.Content>\n                        <Modal.Description>\n                            <Form onSubmit={this.handleSubmit} error={!!this.state.error}>\n                                {!!this.state.error && <Message error visible header=\"Error!\" content={this.state.error} />}\n                                {!!this.state.success && <Message error visible header=\"Success!\" content={this.state.success} />}\n                                <Form.Field>\n                                    <label>Name</label>\n                                    <input \n                                        type=\"text\"\n                                        value={name}\n                                        onChange={e => this.setState({name: e.target.value})}\n                                        placeholder=\"Name\"\n                                    />\n                                </Form.Field>\n                                <Button loading={this.state.loading} disabled={!isValid} primary>Save</Button>\n                            </Form>\n                        </Modal.Description>\n                    </Modal.Content>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nclass DataRow extends React.Component {\n    state = {open: false}\n    closeConfigShow = (closeOnEscape) => () => {this.setState({closeOnEscape, open: true})}\n    close = () => this.setState({open: false})\n    handleDelete = async categoryId => {\n        await db.ref(treeName).child(categoryId).remove();\n        this.props.getDatalistRefresh();\n    }\n    deleteModal = categoryId => {\n        const { open, closeOnEscape } = this.state;\n        return (\n            <React.Fragment>\n                <span onClick={this.closeConfigShow(false, true)} style={{ cursor: 'pointer' }}><Icon name='trash alternate outline' color='red' /></span>\n                <Modal closeOnEscape={closeOnEscape} onClose={this.close} open={open} basic size='tiny'>\n\t\t\t\t\t<Header icon='trash alternate outline' content=\"Delete Category\" />\n\t\t\t\t\t<Modal.Content>\n\t\t\t\t\t\t<p>Are you sure to delete this category?</p>\n\t\t\t\t\t</Modal.Content>\n\t\t\t\t\t<Modal.Actions>\n\t\t\t\t\t\t<Button color='green' onClick={() => this.handleDelete(categoryId)} inverted><Icon name='checkmark' /> Yes</Button>\n\t\t\t\t\t\t<Button basic color='red' onClick={this.close} inverted><Icon name='remove' /> No</Button>\n\t\t\t\t\t</Modal.Actions>\n\t\t\t\t</Modal>\n            </React.Fragment>\n        )\n    }\n    render = () => {\n        const { Row, Cell } = Table;\n        const { name, categoryId, date } = this.props.dataRow;\n        return (\n            <Row>\n                <Cell>{name}</Cell>\n                <Cell>{categoryId}</Cell>\n                <Cell><DisplayTimeAgo time={date} isTimeAgo={true} /></Cell>\n                <Cell>\n                    <EditDataModal {...this.props} />\n                    {this.deleteModal(categoryId)}\n                </Cell>\n            </Row>\n        )\n    }\n}\n\nclass Categories extends React.Component {\n    constructor(props){\n        super(props)\n        this._isMounted = false;\n        this.state = {\n            currentPage: 1,\n            perPage: 20,\n            totalItemCount: 1,\n            datalistStack:[],\n            datalist: [],\n            searchFilter: \"\",\n        }\n    }\n    getDatalistCount = async () => await db.ref(treeName).once(\"value\", snapshot => this.setState({totalItemCount: snapshot.numChildren()}))\n    getDatalist = async (queryDict={}) => {\n        const { currentPage, perPage, datalistStack } = this.state;\n        const startAt = currentPage * perPage - perPage;\n        const direction = queryDict.hasOwnProperty(\"direction\")?queryDict.direction: 'next';\n        const searchFilter = queryDict.hasOwnProperty(\"searchFilter\")?queryDict.searchFilter:'';\n        let qref = db.ref(treeName)\n        let datalist;\n        if (direction === 'next') {\n            if (startAt > 0) {\n                const lastObj = this.state.datalist[this.state.datalist.length - 1];\n                qref = qref.startAt(lastObj.categoryId);\n            }\n            if (datalistStack.hasOwnProperty(this.currentPage)) {\n                datalist = datalistStack[currentPage - 1];\n            } else {\n                qref = qref.orderByKey().limitToFirst(perPage + 1);\n                const snapshot = await qref.once(\"value\")\n                datalist = fromObjectToList(snapshot.val())\n                datalistStack.push(datalist);\n            }\n        } else if (direction === 'prev') {\n            datalist = datalistStack[currentPage - 1]\n        }\n        if (datalist === null) {datalist = []}\n        this.setState({datalist, searchFilter});\n    }\n    getDatalistRefresh = () => {\n        this._isMounted && this.setState({datalistStack: []}, async () => {\n            await this.getDatalistCount();\n            await this.getDatalist();\n        })\n    }\n    getDatalistPartial(){\n        let { datalist, perPage } = this.state;\n        if (datalist.length === perPage + 1) {datalist = datalist.slice(0, -1)}\n        return datalist;\n    }\n    handlePageClick = direction => {\n        const nextPage = direction === 'next' ? this.state.currentPage + 1 : this.state.currentPage - 1;\n        this.setState({currentPage: nextPage}, async () => {\n            await this.getDatalist({direction});\n        });\n    }\n    componentWillUnmount(){this._isMounted = false;}\n    componentDidMount(){\n        this._isMounted = true; this.getDatalistRefresh();\n    }\n    render = () => {\n        const { Header, Row, HeaderCell, Body } = Table;\n        const datalist = this.getDatalistPartial();\n        return (\n            <LayoutUser>\n                <MainMenu history={this.props.history} />\n                <h3>All Categories <Label floated=\"right\">Total {this.state.totalItemCount}</Label>\n                    <AddDataModal getDatalistRefresh={this.getDatalistRefresh} uid={this.props.uid} displayName={this.props.displayName} />\n                </h3>\n                <Divider />\n                <Table>\n                    <Header>\n                        <Row>\n                            <HeaderCell>Name</HeaderCell>\n                            <HeaderCell>ID</HeaderCell>\n                            <HeaderCell>Time</HeaderCell>\n                            <HeaderCell><Icon name='ellipsis horizontal' /></HeaderCell>\n                        </Row>\n                    </Header>\n                    <Body>\n                        {datalist.length > 0 && datalist.map((dataRow, key) => \n                            <DataRow key={key} getDatalistRefresh={this.getDatalistRefresh} dataRow={dataRow} />\n                        )}\n                    </Body>\n                </Table>\n                <SimplePaginate \n                    page={this.state.currentPage}\n                    totalPages={Math.ceil(this.state.totalItemCount / this.state.perPage)}\n                    handlePageClick={this.handlePageClick}\n                />\n            </LayoutUser>\n        )\n    }\n}\n\nexport default Categories;","import React from 'react';\nimport { LayoutUser, MainMenu } from '../../layout';\n\nclass Dashboard extends React.Component {\n    render = () => {\n        return (\n            <LayoutUser>\n                <MainMenu history={this.props.history} />\n                Dashboard\n            </LayoutUser>\n        )\n    }\n}\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport {Form, Grid, Input, Button, Segment, Message}  from 'semantic-ui-react';\n\nimport { LayoutGuest } from '../../layout';\nimport { auth, fs } from '../../firebase';\nimport { HOME_ROUTE } from '../../settings';\n\nconst INITIAL_STATE = {email: \"\", password: \"\", loading: false, error: null};\n\nexport default class Login extends Component {\n    abortController = new AbortController();\n    constructor(props){\n        super(props);\n        this.state = {...INITIAL_STATE};\n    }\n    handleSubmit = async e => {\n        const { email, password } = this.state;\n        const { history } = this.props;\n        e.preventDefault();\n        this.setState({loading: true, error: ''});\n        await auth.doSignInWithEmailAndPassword(email, password)\n        .then(async (data) => {\n            const { user } = data;\n            const ref = fs.collection(\"admins\").doc(user.uid);\n            const snapshot = await ref.get();\n            const admin = snapshot.data();\n            if(admin.admin === true){\n                history.push(HOME_ROUTE);\n            } else {\n                this.setState({error: \"User does not has permission to login\"});\n                await auth.doSignOut();\n            }\n        }).catch(error => {\n            this.setState({error: error.message});\n        });\n        this.setState({loading: false});\n    }\n    componentWillUnmount(){\n        this.abortController.abort();\n    }\n    render = () => {\n        const { email, password, error } = this.state;\n        const isInvalid = password === '' || email === '';\n        return (\n            <LayoutGuest>\n                <div className=\"login-form\">\n                    <Grid textAlign=\"center\" style={{ height: '100%' }} verticalAlign=\"middle\">\n                        <Grid.Column style={{ maxWidth: '450px', marginTop: '15%' }}>\n                            <Form onSubmit={this.handleSubmit} error={!!this.state.error}>\n                                <Segment piled>\n                                    {!!error && <Message error header=\"Error!\" content={error} />}\n                                    <Form.Field>\n                                        <label style={{ float: 'left' }}>Email Address</label>\n                                        <Input \n                                            type=\"text\"\n                                            icon=\"user\"\n                                            iconPosition=\"left\"\n                                            value={email}\n                                            onChange={e => this.setState({email: e.target.value})}\n                                            placeholder={\"Email Address\"}\n                                        />\n                                    </Form.Field>\n                                    <Form.Field>\n                                        <label style={{ float: 'left' }}>Password</label>\n                                        <Input \n                                            type=\"password\"\n                                            icon=\"lock\"\n                                            iconPosition=\"left\"\n                                            value={this.state.password}\n                                            onChange={e => this.setState({password: e.target.value})}\n                                            placeholder={\"Password\"}\n                                        />\n                                    </Form.Field>\n                                    <Button loading={this.state.loading} disabled={isInvalid} primary fluid>Login</Button>\n                                </Segment>\n                            </Form>\n                            <br />\n\n                        </Grid.Column>\n                    </Grid>\n                </div>\n            </LayoutGuest>\n        )\n    }\n}\n\nexport const Logout = () => (\n    <span  onClick={e => auth.doSignOut()}>Logout</span>\n)","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from 'react-redux'\n\nimport { initStore } from './reducer';\nimport { Home, ArticleDetail } from './ui/content';\nimport { Articles, Categories, Dashboard } from './ui/admin';\nimport { Login } from './ui/auth';\n\nimport 'semantic-ui-css/semantic.min.css'\nimport './App.css'\n\nconst history = createBrowserHistory();\n\nconst App = () => {\n    return (\n        <Provider store={initStore()} history={history} >\n            <BrowserRouter>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/article/:slug\" exact component={ArticleDetail} />\n                <Route path=\"/auth/login\" component={Login} />\n                <Route path=\"/admin\" exact component={Dashboard} />\n                <Route path=\"/admin/articles\" component={Articles} />\n                <Route path=\"/admin/categories\" component={Categories} />\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}